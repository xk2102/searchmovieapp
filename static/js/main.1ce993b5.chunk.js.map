{"version":3,"sources":["components/MovieCard.js","App.js","reportWebVitals.js","index.js"],"names":["MovieCard","props","Year","Title","Plot","Actors","Runtime","Rated","className","id","App","useState","searchTerm","setSearchTerm","movies","setMovies","event","getMovies","a","url","fetch","response","json","jsonData","preventDefault","propTypes","PropTypes","string","isRequired","Response","listOfImdbIDs","Search","map","d","imdbID","Promise","all","listOfMovies","console","log","sort","b","Error","alert","onSubmit","placeholder","onChange","target","value","length","movie","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAuBeA,MArBf,SAAmBC,GAAQ,IACfC,EAA8CD,EAA9CC,KAAMC,EAAwCF,EAAxCE,MAAOC,EAAiCH,EAAjCG,KAAMC,EAA2BJ,EAA3BI,OAAQC,EAAmBL,EAAnBK,QAASC,EAAUN,EAAVM,MAC5C,OACI,0BAASC,UAAU,kBAAnB,UAEI,qBAAKC,GAAG,QAAR,SAAgB,kCAAKP,EAAL,KAAaC,OAC7B,qBAAKM,GAAG,OAAR,SAAe,4BAAIL,MACnB,8BACI,8BACI,6CADJ,IAC8BC,EAAO,uBACjC,8CAFJ,IAE+BC,EAAQ,uBACnC,4CAHJ,IAG6BC,W,gBCiE9BG,MAtEf,WAAgB,IAAD,EAEuBC,mBAAS,aAFhC,mBAENC,EAFM,KAEMC,EAFN,OAGeF,mBAAS,IAHxB,mBAGNG,EAHM,KAGEC,EAHF,iDAKb,WAA4BC,GAA5B,UAQiBC,EARjB,eAAAC,EAAA,iGAAAA,EAAA,MAQE,WAAyBT,GAAzB,mBAAAS,EAAA,6DACMC,EADN,qDAC0DV,EAD1D,wBAEuBW,MAAMD,GAF7B,cAEME,EAFN,gBAGuBA,EAASC,OAHhC,cAGMC,EAHN,yBAISA,GAJT,4CARF,uBAQiBN,EARjB,4CACED,EAAMQ,iBAEFL,EAHN,qDAG0DP,GAH1D,SAIuBQ,MAAMD,GAJ7B,cAIME,EAJN,gBAKuBA,EAASC,OALhC,UAKMC,EALN,OAcEN,EAAUQ,UAAY,CACpBhB,GAAIiB,IAAUC,OAAOC,YAGG,SAAtBL,EAASM,SAlBf,wBAmBUC,EAAgBP,EAASQ,OAAOC,KAAI,SAACC,GAAD,OAAOA,EAAEC,UAnBvD,UAqB+BC,QAAQC,IACjCN,EAAcE,KAAI,SAACE,GAAD,OAAYjB,EAAUiB,OAtB9C,QAqBUG,EArBV,OAwBIC,QAAQC,IAAIF,GAEZA,EAAaG,MAAK,SAACtB,EAAGuB,GACpB,OAAOvB,EAAEhB,KAAOuC,EAAEvC,QAGpBa,EAAUsB,GA9Bd,wBAiCIC,QAAQC,IAAIhB,EAASmB,OACrBC,MAAMpB,EAASmB,OACf3B,EAAU,IAnCd,6CALa,sBA4Cb,OACE,sBAAKP,UAAU,YAAf,UAEE,qBAAKA,UAAU,SAAf,SAAwB,sDAExB,uBAAMC,GAAG,aAAamC,SAjDb,4CAiDT,UACE,uBAAOnC,GAAG,cAAcoC,YAAY,qBAClCC,SAAU,SAAC9B,GAAD,OAAWH,EAAcG,EAAM+B,OAAOC,UAElD,wBAAQvC,GAAG,eAAX,uBAGDK,EAAOmC,OAAS,GACf,gCACqB,IAAlBnC,EAAOmC,OAAe,gDAAyB,uCAAUnC,EAAOmC,OAAjB,gBAC/CnC,EAAOkB,KAAI,SAACkB,EAAOC,GAAR,OACV,cAAC,EAAD,eAA2BD,GAAXC,aCxDbC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1ce993b5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction MovieCard(props) {\r\n    const { Year, Title, Plot, Actors, Runtime, Rated } = props;\r\n    return (\r\n        <article className=\"container-movie\">\r\n\r\n            <div id=\"title\"><p>[{Year}] {Title}</p></div>\r\n            <div id=\"plot\"><p>{Plot}</p></div>\r\n            <div>\r\n                <p>\r\n                    <strong>Actors:</strong> {Actors}<br />\r\n                    <strong>Runtime:</strong> {Runtime}<br />\r\n                    <strong>Rated:</strong> {Rated}\r\n\r\n                </p>\r\n            </div>\r\n\r\n        </article>\r\n\r\n    )\r\n}\r\n\r\nexport default MovieCard;","//added a comment on the branch\r\n\r\nimport './App.css';\r\nimport React, { useState } from \"react\";\r\nimport MovieCard from \"./components/MovieCard\";\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nfunction App() {\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"star wars\");\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    var url = `https://www.omdbapi.com/?apikey=af51510a&s=${searchTerm}`;\r\n    var response = await fetch(url);\r\n    var jsonData = await response.json();\r\n    // console.log(jsonData);\r\n\r\n    async function getMovies(id) {\r\n      var url = `https://www.omdbapi.com/?apikey=af51510a&i=${id}&plot=short`;\r\n      var response = await fetch(url);\r\n      var jsonData = await response.json();\r\n      return jsonData;\r\n    }\r\n    getMovies.propTypes = {\r\n      id: PropTypes.string.isRequired\r\n    }\r\n\r\n    if (jsonData.Response === \"True\") {\r\n      const listOfImdbIDs = jsonData.Search.map((d) => d.imdbID);\r\n\r\n      const listOfMovies = await Promise.all(\r\n        listOfImdbIDs.map((imdbID) => getMovies(imdbID))\r\n      );\r\n      console.log(listOfMovies);\r\n\r\n      listOfMovies.sort((a, b) => {\r\n        return a.Year - b.Year;\r\n      });\r\n\r\n      setMovies(listOfMovies);\r\n\r\n    } else {\r\n      console.log(jsonData.Error);\r\n      alert(jsonData.Error);\r\n      setMovies([]);\r\n    }\r\n  } //handleSubmit\r\n\r\n  return (\r\n    <div className=\"container\">\r\n\r\n      <div className=\"header\"><span>MOVIE SEARCH APP</span></div>\r\n\r\n      <form id=\"searchForm\" onSubmit={handleSubmit}>\r\n        <input id=\"searchInput\" placeholder=\"give me keywords..\"\r\n          onChange={(event) => setSearchTerm(event.target.value)}\r\n        ></input>\r\n        <button id=\"searchButton\">Search</button>\r\n      </form>\r\n\r\n      {movies.length > 0 && (\r\n        <div>\r\n          {movies.length === 1 ? <p>Found 1 result:</p> : <p>Found {movies.length} results: </p>}\r\n          {movies.map((movie, index) => (\r\n            <MovieCard key={index} {...movie} />\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}